name: Python Application Test


on:
  push:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-rdepends
    - name: Run test without root rights
      id: run-without-root-rights
      run: |
        python3 apt-who-needs.py;
    - name: Run test without package
      id: run-without-package
      run: |
        sudo python3 apt-who-needs.py;
    - name: Run test with package
      id: run-with-package
      run: |
        sudo python3 apt-who-needs.py apt;




   
  build:
    needs: check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dpkg-dev
    - name: Get the latest tag
      id: get-latest-tag
      run: |
        echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV
    - name: Build .deb Package
      run: |
        mkdir -p apt-who-needs/DEBIAN
        mkdir -p apt-who-needs/usr/local/bin
        echo "Package: apt-who-needs" > apt-who-needs/DEBIAN/control
        echo "Version: ${{ env.LATEST_TAG }}" >> apt-who-needs/DEBIAN/control
        echo "Section: base" >> apt-who-needs/DEBIAN/control
        echo "Priority: optional" >> apt-who-needs/DEBIAN/control
        echo "Architecture: all" >> apt-who-needs/DEBIAN/control
        echo "Depends: python3" >> apt-who-needs/DEBIAN/control
        echo "Maintainer: ${{ secrets.MY_NAME }} <${{ secrets.MY_EMAIL }}>" >> apt-who-needs/DEBIAN/control
        echo "Description: Efinds out which packages depend on the specified package " >> apt-who-needs/DEBIAN/control
        cp apt-who-needs.py apt-who-needs/usr/local/bin/apt-who-needs
        chmod +x apt-who-needs/usr/local/bin/apt-who-needs
        dpkg-deb --build apt-who-needs
    - name: Upload .deb Package as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: apt-who-needs
        path: apt-who-needs.deb

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MAGIC_TOKEN }}
      with:
        tag_name:  ${{ env.LATEST_TAG }}
        release_name: Release  ${{ env.LATEST_TAG }}
        draft: false
        prerelease: false
  
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MAGIC_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifact.zip
        asset_name: artifact.zip
        asset_content_type: application/zip
